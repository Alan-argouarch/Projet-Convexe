# Librairies
import numpy as np 

### Projection sur un hyperplan 
def proj_hyperplan(X, A):
    """
    Projette le vecteur X sur l' hyperplan H défini par le vecteur A.

    Arguments :
    - X : vecteur de dimension n, représentant le vecteur à projeter.
    - A : vecteur de dimension n+1, contenant le vecteur normal et le terme constant.

    """
    # Extraire la partie normale de A
    n =np.array(A[:-1])
    # Soit F 
    # Calcul de la projection
    proj = X - (np.dot(X, n)/(np.linalg.norm(n)**2))*n
    return proj


def croisement(X,A,B):
    
    projA= proj_hyperplan(X,A)
    projB= proj_hyperplan(projA,B)
    
    compteur=2
    
    while abs(projA[0]-projB[0])>0.01 or abs(projA[1]-projB[1])>0.01 or abs(projA[2]-projB[2])>0.01:
        projA= proj_hyperplan(projB,A)
        projB= proj_hyperplan(projA,B)
        
        compteur+=2
        
    return projB , compteur
